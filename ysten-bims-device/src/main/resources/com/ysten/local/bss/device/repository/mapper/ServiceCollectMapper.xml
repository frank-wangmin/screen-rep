<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ysten.local.bss.device.repository.mapper.ServiceCollectMapper">
    <resultMap id="BaseResultMap" type="serviceCollect">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="service_type" property="serviceType" jdbcType="VARCHAR"/>
         <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List">
    s.id,s.create_date,s.description,s.service_type,s.update_date
    </sql>

    <select id="getServiceCollectByType" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from bss_service_collect s
        <where>
            <if test="serviceType!=null and serviceType!=''">
                s.service_type = #{serviceType,jdbcType=VARCHAR}
            </if>
        </where>
        order by s.create_date desc
    </select>
    
    <select id="getServiceCollectByDescription" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from bss_service_collect s
        where 
              s.description = #{description,jdbcType=VARCHAR}
        order by s.id desc
        limit 1
    </select>

    <select id="getServiceCollectByYstenIdOrGroupId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from bss_service_collect s
        join bss_service_collect_device_group_map m
        where m.service_collect_id = s.id
        <if test="ystenId !=null ">
            and m.ysten_id = #{ystenId, jdbcType=VARCHAR}
        </if>
        <if test="groupId !=null ">
            and m.device_group_id = #{groupId, jdbcType=BIGINT}
        </if>
        and s.service_type = 'NORMAL'
    </select>


    <select id="getServiceCollectByDeviceGroupId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from bss_service_collect s
        left join bss_service_collect_device_group_map m on m.service_collect_id = s.id
        where m.device_group_id = #{deviceGroupId,jdbcType=BIGINT}
        order by s.id desc
        limit 1
    </select>
    
    <select id="findServiceCollectList" resultMap="BaseResultMap">
    	select <include refid="Base_Column_List"/> from bss_service_collect s 
    	<where>
    		<if test="serviceType != ''">
    			s.service_type = #{serviceType}
    		</if>
    	</where>
    	order by s.id desc limit #{pageNo}, #{pageSize}
    </select>

    <select id="findAllServiceCollectList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from bss_service_collect s
        <where>
            <if test="serviceType != ''">
                s.service_type = 'NORMAL'
            </if>
        </where>
    </select>

	<select id="getServiceCollectCount" resultType="int">
		select count(1) from bss_service_collect s
		<where>
    		<if test="serviceType != ''">
    			s.service_type = #{serviceType} 
    		</if>
    	</where>
	</select>
	
	<select id="getServiceCollectById" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from bss_service_collect s
		where s.id = #{id}
	</select>
	
	<insert id="saveServiceCollect" useGeneratedKeys="true" keyProperty="id">
		insert into bss_service_collect(create_date, description, service_type,update_date)
		values (#{createDate}, #{description}, #{serviceType},#{updateDate})
	</insert>
	
	<update id="setAllSeviceCollectNormal">
		update bss_service_collect set service_type='NORMAL'
	</update>
	
	<update id="updateSerivceCollect">
		update bss_service_collect set 
		description = #{description},
		service_type = #{serviceType},update_date = #{updateDate}
		where id = #{id}
	</update>
</mapper>